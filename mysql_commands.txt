===================================================

	Mysql

===================================================

	Ubuntu18.04_Mysql

1. Install Mysql server

		sudo apt install mysql-server

(Now run 'sudo mysql -u root -p', it will not ask the password.

2. When the installation is complete, run a simple security script that comes pre-installed with MySQL which will remove some dangerous defaults and lock down access to your database system. Start the interactive script by running: 

		sudo mysql_secure_installation

This will ask if you want to configure the VALIDATE PASSWORD PLUGIN.

If you answer “yes”, you'll be asked to select a level of password validation. Keep in mind that if you enter 2 for the strongest level, you will receive errors when attempting to set any password which does not contain numbers, upper and lowercase letters, and special characters, or which is based on common dictionary words.

3. Change the Password:

		sudo mysql
		> SELECT user,authentication_string,plugin,host FROM mysql.user;
		> ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';
		> FLUSH PRIVILEGES;
		> exit;

4. Check the Mysql Server:

		mysql -u root -p

It will ask the password. Before this process, mysql entered without password.

===================================================

	Table Creation:

create table emp_details ( emp_id int(10) not null primary key, emp_type varchar(20) not null, emp_name varchar(30) not null, join_data int(20) not null );

==================================================
 
	Insert:

insert into emp_details (emp_id,emp_type,emp_name,join_data) values (5010,'permanent','user1','20');

==================================================

	Alter Table

alter table emp_details modify join_data varchar(20);

alter table emp_details change join_data join_date varchar(30);

alter table emp_details drop join_date;

alter table emp_details add  join_date varchar(30);

==================================================

	Update Table:

update  emp_details set join_date = 'march20' where join_date = 20;

update  emp_details set join_date = '20/03/2018' where join_date = 'march20';


========================================================

	Create User:

create user 'username@host' identified by 'password';

use mysql;

select * from user;

(Here you can view the users)

=======================================================

	Grant Permissions

grant all privileges on user_backup.emp_details to 'rama@host';

grant all privileges on user_backup.* to 'rama@host';

grant all privileges on *.* to 'rama@host';

=======================================================

	Revoke Permissions

revoke all privileges on user_backup.emp_details from 'rama@host';

revoke  all privileges on user_backup.* from 'rama@host';

revoke all privileges on *.* from 'rama@host';

========================================================

	Drop User

drop user rama;

========================================================

	Copy Entire Database

Source Server: 

1. sudo /etc/init.d/mysql stop
2. mkdir mysql_backup_03-01-2019
3. sudo cp /var/lib/mysql/ mysql_backup_03-01-2019/ -rf
4. sudo rsync -avz mysql_backup_03-01-2019/mysql ramani@192.168.56.3:/home/ramani

Destination Server:

1. sudo /etc/init.d/mysql stop
2. sudo cp -rfv mysql/*  /var/lib/mysql/
3. sudo chown -R mysql:mysql /var/lib/mysql
4. sudo /etc/init.d/mysql start
5. mysql -u root -p
(Here it will ask your source mysql's password.)

	> show databases;

(Check all the databases are there.)
=========================================================

	Database Backup

mysqldump -u username -p databasename >  databasename.sql

mysqldump -u username -p --databases  database1 database2  > database1_database2.sql

mysqldump -u username -p  --all-databases > alldatabases.sql

==========================================================

	Restore Database

mysql -u username -p databasename  < databasename.sql

If we are trying to restore a single database from dump of all the databases, we have to let mysql know like this:

mysql -u username -p --one-database databasename < alldatabases.sql

If we want to restore entire database follow this command

mysql -u username -p < alldatabases.sql

===========================================================

	Reset Password

sudo /etc/init.d/mysql stop

sudo mkdir /var/run/mysqld

sudo chown mysql /var/run/mysqld/

sudo mysqld_safe --skip-grant-tables &

sudo mysql -u root

> use mysql;

> update user set authentication_string=PASSWORD("New_Passwore_Here") where User='root';

> flush privileges;

> exit;

sudo /etc/init.d/mysql stop

sudo /etc/init.d/mysql start

mysql -u root -p

----------------------------------------------------------------

ps -ef |grep mysql
(kill the all mysql process)

sudo kill -9 process_id

sudo /etc/init.d/mysql start

mysql -u root -p

============================================================

